<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lh.school.mapper.SchoolStudentMapper">
    
    <resultMap type="SchoolStudent" id="SchoolStudentResult">
        <result property="id"    column="id"    />
        <result property="name"    column="name"    />
        <result property="phone"    column="phone"    />
        <result property="addr"    column="addr"    />
        <result property="sex"    column="sex"    />
        <result property="introduce"    column="introduce"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <sql id="selectSchoolStudentVo">
        select id, name, phone, addr, sex, introduce, remark from school_student
    </sql>

    <select id="selectSchoolStudentList" parameterType="SchoolStudent" resultMap="SchoolStudentResult">
        <include refid="selectSchoolStudentVo"/>
        <where>  
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="phone != null  and phone != ''"> and phone = #{phone}</if>
            <if test="addr != null  and addr != ''"> and addr like concat('%', #{addr}, '%')</if>
            <if test="sex != null  and sex != ''"> and sex = #{sex}</if>
            <if test="introduce != null  and introduce != ''"> and introduce = #{introduce}</if>
        </where>
    </select>
    
    <select id="selectSchoolStudentById" parameterType="Long" resultMap="SchoolStudentResult">
        <include refid="selectSchoolStudentVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertSchoolStudent" parameterType="SchoolStudent">
        insert into school_student
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="name != null and name != ''">name,</if>
            <if test="phone != null">phone,</if>
            <if test="addr != null">addr,</if>
            <if test="sex != null">sex,</if>
            <if test="introduce != null">introduce,</if>
            <if test="remark != null">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="name != null and name != ''">#{name},</if>
            <if test="phone != null">#{phone},</if>
            <if test="addr != null">#{addr},</if>
            <if test="sex != null">#{sex},</if>
            <if test="introduce != null">#{introduce},</if>
            <if test="remark != null">#{remark},</if>
         </trim>
    </insert>

    <update id="updateSchoolStudent" parameterType="SchoolStudent">
        update school_student
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="phone != null">phone = #{phone},</if>
            <if test="addr != null">addr = #{addr},</if>
            <if test="sex != null">sex = #{sex},</if>
            <if test="introduce != null">introduce = #{introduce},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteSchoolStudentById" parameterType="Long">
        delete from school_student where id = #{id}
    </delete>

    <delete id="deleteSchoolStudentByIds" parameterType="String">
        delete from school_student where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>